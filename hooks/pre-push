#!/bin/bash
echo ""
echo "üîç Running pre-push checks..."
echo ""

# Analyze code
flutter analyze > analyze_output.txt

# Check if flutter analyze returned non-zero (i.e. has errors)
if [ $? -ne 0 ]; then
    echo "‚ùå Flutter analyze failed:"
    cat analyze_output.txt
    rm analyze_output.txt
    exit 1
fi

# Check specifically for unused imports (even if warning)
if grep -q "info ‚Ä¢ Unused import" analyze_output.txt; then
    echo "‚ùå Unused import(s) found. Please remove them before pushing:"
    grep "info ‚Ä¢ Unused import" analyze_output.txt
    rm analyze_output.txt
    exit 1
fi

echo "‚úÖ Flutter analyze passed."
rm analyze_output.txt


# # Format check
# FORMAT_OUTPUT=$(dart format --set-exit-if-changed . 2>&1)
# EXIT_CODE=$?

# if [[ $EXIT_CODE -ne 0 ]]; then
#     echo "‚ùå Code formatting issues found:"
#     echo "$FORMAT_OUTPUT"
#     exit 1
# else
#     echo "‚úÖ Code is properly formatted."
# fi

# Format check with auto-correct
FORMAT_OUTPUT=$(dart format . 2>&1)

if [[ "$FORMAT_OUTPUT" == *"Formatted "* ]]; then
    # echo "‚ùå Code formatting issues found"
    # echo "$FORMAT_OUTPUT"
    echo "‚úÖ Code formatted"
else
    echo "‚úÖ Code formatting is correct"
fi



echo "üß™ Running tests..."
flutter test
if [ $? -ne 0 ]; then
    echo "‚ùå Tests failed!"
    exit 1
fi

echo ""
echo "---------------------------------------------"
echo ""
echo "‚úÖ All checks passed. Proceeding with push."
echo ""
echo "---------------------------------------------"
echo ""
exit 0
